def login(usuario, contrasenia):
    with open("Usuarios.txt", 'r', encoding='utf-8') as archivo:
        listaUsuarios=[]
        listacontraseñas=[]
        for linea in archivo:
            usu, contra = linea.strip().split(".")
            listaUsuarios.append(usu)
            listacontraseñas.append(contra)
        if usuario in listaUsuarios and contrasenia in listacontraseñas:
            return True
        while contrasenia not in listacontraseñas:
            contrasenia = input("Ingrese la contraseña nuevamente: ")
            if contrasenia in listacontraseñas:
                return True

def registrarse(usuario,contrasenia):
    with open("Usuarios.txt", 'a', encoding='utf-8') as archivo:
            archivo.write(f"\n{usuario}.{contrasenia}")
            print("Se creó el usuario")
            return True



class vuelo:
    def __init__(self,nro_vuelo,aeropuerto_salida,aeropuerto_llegada,nro_serie,legajo_piloto,precio):
        self.nro_vuelo=nro_vuelo
        self.aeropuerto_salida=aeropuerto_salida
        self.aeropuerto_llegada=aeropuerto_llegada
        self.nro_serie=nro_serie
        self.legajo_piloto=legajo_piloto
        self.precio=precio
  
    @staticmethod
    def check_nro_vuelo(nro_vuelo):
        while len(nro_vuelo)!=4 or not nro_vuelo.isnumeric():
            nro_vuelo = input("Error, debe ingresar un número de 4 dígitos: ")
    
    @staticmethod
    def check_precio_vuelo(precio):
        while int(precio) < 0 or not precio.isnumeric():
            precio = input("El precio tiene que ser un número positivo: ")

    @staticmethod
    def check_piloto(legajo_piloto,lista_empleado):  
        for empleado in lista_empleado:
            if empleado.legajo == legajo_piloto:
                return empleado.esPiloto()
        return False



class viaje:
    def __init__(self,nro_viaje,nro_vuelo,nro_serie,fecha):
        self.nro_viaje=nro_viaje
        self.nro_vuelo=nro_vuelo
        self.nro_avion=nro_serie
        self.fecha=fecha
        self.num_pasajeros=[]
    

    def eliminarViaje(nro_viaje,lista_viaje):
        for viaje in lista_viaje:
            if viaje.nro_viaje==nro_viaje:
                lista_viaje.pop(viaje)
        return lista_viaje

    def check_fecha():
        pass



    @staticmethod
    def check_vuelo(nro_vuelo,lista_vuelo):
        while True:
            for vuelo in lista_vuelo:
                if vuelo.nro_vuelo == nro_vuelo:
                    return nro_vuelo
            nro_vuelo = input("Error, el vuelo no existe. Intente de nuevo.")
    
    @staticmethod
    def check_avion(nro_serie,lista_avion):        
        while True:
            for avion in lista_avion:
                if avion.nro_serie == nro_serie:
                    return nro_serie
            nro_serie = input("Error, el avión no existe. Intente de nuevo.") 
